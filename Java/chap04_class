*은행 통장 class

//은행 계좌 클래스
public class Account {
	//멤버변수(필드, 속성)//변수 소문자로//상수는 대문자로
	//static : 정적멤버변수 원본 클래스에서만 사용가능
	static final String BANKNAME = "신한은행";//늘상 똑같은 수 "상수"
	String accountNo; //계좌번호
	String ownerName;//예금주 이름
	int balance;//잔액
	
	//빈 생성자
	public Account() {
		
	}
	
	//생성자
	public Account(String acc, String own, int bal) {//매개변수
		this.accountNo = acc;//this로 멤버변수 구분
		this.ownerName = own;
		this.balance = bal;
	}
	
	
	//예금한다 메서드
	public void deposit (int amount) {//
		balance += amount;
	}
	//인출한다 메서드
	public int withdraw(int amount) throws Exception{
		if(balance < amount) {
			System.out.println("잔액이 부족합니다.");
		}
		balance -= amount;
		return amount;
	}
}
//예제1---------------------------------------------------------------------------------
public class AccountEX01 {

	public static void main(String[] args) {
		Account chulsu = new Account(); // chulsu 인스턴스 객체 생성//빈 생성자
		Account gildong = new Account();//gildong 인스턴스 객체 생성//빈 생성자
		chulsu.accountNo = "111-22-33333";
		chulsu.ownerName = "김철수";
		chulsu.balance = 1000;
		gildong.accountNo = "111-22-55555";
		gildong.ownerName = "홍길동";
		gildong.balance = 0;
		chulsu.deposit(5000);
		gildong.deposit(3000);
		chulsu.deposit(2000);
		
		
		try {
			int amount = gildong.withdraw(1200);
			System.out.println("인출한 금액 = " + amount);
			System.out.println("잔액(홍길동) = " + gildong.balance);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

//예제2-----------------------------------------------------------------------------------------------

public class AccountEx02 {

	public static void main(String[] args) {
		Account min = new Account("22-33-55555", "민", 0);//인스턴스 객체 생성, 선언, 초기화 했다.
		Account dowoo = new Account("22-33-88888", "도우", 2000);//인스턴스 객체 생성, 선언, 초기화 했다.

		min.deposit(5000);
		try {
			min.withdraw(1000);
			printAccount(min);//출력
			printAccount(dowoo);//출력
			printAccount(new Account("33-77-55", "손흥민", 1000000));//익명객체 생성

		} catch (Exception e) {// 돈 찾는 건 예외처리를 해줬기 때문에 에러난다. 그러므로 try/catch 해준다.
			System.out.println(e.getMessage());
		}

//		System.out.println("계좌번호 : " + min.accountNo);
//		System.out.println("예금주이름 : " + min.ownerName);
//		System.out.println("민의 잔액 = " + min.balance);
//		System.out.println("계좌번호 : " + dowoo.accountNo);
//		System.out.println("예금주이름 : " + dowoo.ownerName);
//		System.out.println("민의 잔액 = " + dowoo.balance);

	}

	// 통장 잔고 출력 메서드
	static void printAccount(Account obj) {
		System.out.println("계좌번호 : " + obj.accountNo);
		System.out.println("예금주이름 : " + obj.ownerName);
		System.out.println("민의 잔액 = " + obj.balance);
		System.out.println("=====================================");

	}
}


*class 생성
클래스를 설계
멤버변수, 생성자, 메서드

객체는 선언, 생성, 초기화할 수 있다.

//예제3--------------------------------------------------------------------------------------

public class AccountEx03 {

	public static void main(String[] args) {
		Account pyomin = new Account("110-468-5555", "표민", 0);
		pyomin.deposit(20000);
		try {
			int amount = pyomin.withdraw(7000);
			System.out.println("민이 인출액" + amount);
		} catch (Exception e) {
			System.out.println(e .getMessage());
		}
		Account sunmin = new Account("111-22-33333", "선민", 100);
		sunmin.deposit(3000);
		
		System.out.println("민이 : " + pyomin.balance);
		System.out.println("거래은행 : " + Account.BANKNAME);//상수//정적멤버변수
		System.out.println("계좌번호 : " + sunmin.accountNo);
		System.out.println("예금주 이름 : " + sunmin.ownerName);
		System.out.println("잔액 : " + sunmin.balance);
	}
}


