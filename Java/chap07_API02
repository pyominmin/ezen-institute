*API

*나노타임
package API;

public class RunTimeEx01 {

	public static void main(String[] args) {
		long time1 = System.nanoTime();
		long sum = 0;
		for(int i = 1; i <= 100000; i++) {
			sum += i;
		}
		long time2 = System.nanoTime();
		System.out.println("1부터 100까지의 합 =" + sum);
		System.out.println("100000까지 합을 계산하는데 걸린 시간= " + (time2 - time1));
	}

}

----------------------------------------------------------------------------------------------

*StringBuilder

public class StringEx01 {

	public static void main(String[] args) {
//		String str = "우리";
//		str += "나라";
//		str += "만세";
//		System.out.println(str);
		//객체 타입 변수는 쓰레기 메모리가 늘어난다.
		
		StringBuilder sb = new StringBuilder();//데이터를 조작할 때 임시로 사용하는 것
		//sb라는 주소에 값을 저장해서 메모리를 아낄 수 있다.
		sb.append("우리모두");//append는 추가라는 의미//개발이 끝나면 나의 변수에 넣어주면 된다.
		sb.append("화이팅");
		System.out.println(sb.toString());
		
		sb.insert(4, "힘차게");//insert는 중간에 집어넣는 것
		System.out.println(sb.toString());
		
		sb.setCharAt(7, '파');//한 문자를 변경//배열의 값을 변경
		System.out.println(sb.toString());
		
		sb.replace(4, 7, "아자아자");//지정 위치에 있던 문자를 변경해준다.
		System.out.println(sb.toString());
		
		sb.delete(8, 11);//지정 위치에 있는 문자 삭제
		System.out.println(sb.toString());

		String result = sb.toString();//StringBuilder는 임시 작업이기 때문에 최종적으로 변수에 넣어야 한다.
		System.out.println(result);
	}

}
---------------------------------------------------------------------------------------
*split


public class StringEx02 {

	public static void main(String[] args) {
		String data = " 김철수 & 이영희, 홍길동 - 박찬호, 손흥민";
		String[] names = data.split("&|,|-");//객체의 배열//split는 괄호 안에 있는 분리자를 통해 분리
		//여러가지 분리자 사용
		for(int i = 0; i < names.length; i++) {
		System.out.println(names[i]);
		}
	}

}

---------------------------------------------------------------------------------------

*StringTokenizer

public static void main(String[] args) {
String data = " 김철수 이영희 홍길동 박찬호 손흥민";
		StringTokenizer st = new StringTokenizer(data);//구분자는 하나밖에 못쓰지만 공백(구분자 생략 시)으로 분류할 수 있다.
		while(st.hasMoreElements()) {//StringTokenizer는 for문으로 돌지 못한다. while문으로 돌아야 한다.
			String name = st.nextToken();
			System.out.println(name);
		}
		
	}

---------------------------------------------------------------------------------------

*박싱(Boxing), //언박싱(unBoxing)

public class BoxingEx01 {

	public static void main(String[] args) {
		int num1 = 10;
		System.out.println(num1);
		//박싱(Boxing)// 앱개발의 경우 많이 사용한다.
		Integer num2 = 20;//번지가 기억된다.
		System.out.println(num2.intValue());//값 가져오기
		
		//언박싱(unBoxing)
		int value = num2;
		int num3 = 50;
		int num4 = 50;
		System.out.println(num3 == num4);
		
		Integer num5 = 50;
		Integer num6 = 50;
		System.out.println(num5.equals(num6));
		
	}

}
---------------------------------------------------------------------------------------

*Math메서드


public class MathEx01 {

	public static void main(String[] args) {
		double num1 = Math.round(5.7); //반올림 메서드
		System.out.println(num1);
		
		double num2 = Math.ceil(8.3); //올림 메서드
		double num3 = Math.ceil(-8.3);
		System.out.println(num2);
		System.out.println(num3);
		
		double num4 = Math.floor(8.3);//내림
		double num5 = Math.floor(-8.3);
		System.out.println(num4);
		System.out.println(num5);
		
		int num6 = Math.max(12, 74);//두 수중에 큰 값을 돌려준다.
		System.out.println(num6);
		
		int num7 = Math.min(10, 5);
		System.out.println(num7);
		
	}

}

