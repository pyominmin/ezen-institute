*API

*나노타임
package API;

public class RunTimeEx01 {

	public static void main(String[] args) {
		long time1 = System.nanoTime();
		long sum = 0;
		for(int i = 1; i <= 100000; i++) {
			sum += i;
		}
		long time2 = System.nanoTime();
		System.out.println("1부터 100까지의 합 =" + sum);
		System.out.println("100000까지 합을 계산하는데 걸린 시간= " + (time2 - time1));
	}

}

----------------------------------------------------------------------------------------------

*StringBuilder

public class StringEx01 {

	public static void main(String[] args) {
//		String str = "우리";
//		str += "나라";
//		str += "만세";
//		System.out.println(str);
		//객체 타입 변수는 쓰레기 메모리가 늘어난다.
		
		StringBuilder sb = new StringBuilder();//데이터를 조작할 때 임시로 사용하는 것
		//sb라는 주소에 값을 저장해서 메모리를 아낄 수 있다.
		sb.append("우리모두");//append는 추가라는 의미//개발이 끝나면 나의 변수에 넣어주면 된다.
		sb.append("화이팅");
		System.out.println(sb.toString());
		
		sb.insert(4, "힘차게");//insert는 중간에 집어넣는 것
		System.out.println(sb.toString());
		
		sb.setCharAt(7, '파');//한 문자를 변경//배열의 값을 변경
		System.out.println(sb.toString());
		
		sb.replace(4, 7, "아자아자");//지정 위치에 있던 문자를 변경해준다.
		System.out.println(sb.toString());
		
		sb.delete(8, 11);//지정 위치에 있는 문자 삭제
		System.out.println(sb.toString());

		String result = sb.toString();//StringBuilder는 임시 작업이기 때문에 최종적으로 변수에 넣어야 한다.
		System.out.println(result);
	}

}
